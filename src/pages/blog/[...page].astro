---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import Pagination from '../../components/Pagination.astro';
import '../../styles/global.css';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths = (async ({ paginate }) => {
  const posts = (await getCollection('blog')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );
  const formattedPosts = posts
    .slice()
    .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

  return paginate(formattedPosts, {
    pageSize: 5,
  });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
if (!page) return Astro.redirect('/404');
const pathname = new URL(Astro.request.url).pathname.split('/');
const firstPath = pathname[1];
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      main {
        margin-top: 30px;
      }

      .blog-list {
        max-width: 960px;
        margin: 5rem auto;
      }

      ul {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        list-style-type: none;
        margin: 0;
        padding: 0;
      }
      ul li {
        width: calc(50% - 1rem);
      }
      ul li * {
        text-decoration: none;
        transition: 0.2s ease;
      }
      ul li:first-child {
        width: 100%;
        margin-bottom: 1rem;
        text-align: center;
      }
      ul li:first-child img {
        width: 100%;
      }
      ul li:first-child .title {
        font-size: 2.369rem;
      }
      ul li img {
        margin-bottom: 0.5rem;
        border-radius: 12px;
      }
      ul li a {
        display: block;
      }
      .title {
        margin: 0;
        color: rgb(var(--black));
        line-height: 1;
      }
      .date {
        margin: 0;
        color: rgb(var(--gray));
      }
      ul li a:hover h4,
      ul li a:hover .date {
        color: rgb(var(--accent));
      }
      ul a:hover img {
        box-shadow: var(--box-shadow);
      }
      @media (max-width: 720px) {
        ul {
          gap: 0.5em;
        }
        ul li {
          width: 100%;
          text-align: center;
        }
        ul li:first-child {
          margin-bottom: 0;
        }
        ul li:first-child .title {
          font-size: 1.563em;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section class="blog-list">
        <ul>
          {
            page.data.map((post: any) => (
              <li>
                <a href={`/blog/${post.id}/`}>
                  {post.data.heroImage && (
                    <Image width={720} height={360} src={post.data.heroImage} alt="" />
                  )}
                  <h4 class="title">{post.data.title}</h4>
                  <p class="date">
                    <FormattedDate date={post.data.pubDate} />
                  </p>
                </a>
              </li>
            ))
          }
        </ul>
      </section>
      {
        page.total > 5 ? (
          <div class="mt-4">
            <Pagination
              length={page.lastPage}
              currentUrl={page.url.current}
              currentPage={page.currentPage}
              firstUrl={`/${firstPath}`}
              prevUrl={page.url.prev}
              nextUrl={page.url.next}
              lastUrl={`/${firstPath}/${page.lastPage}`}
            />
          </div>
        ) : null
      }
    </main>
    <Footer />
  </body>
</html>
