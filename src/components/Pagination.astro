---
const { length, currentUrl, currentPage, firstUrl, prevUrl, nextUrl, lastUrl } = Astro.props;
const paginationList = Array.from({ length: Number(length) }, (_, i) => i + 1);

// Calculate which page numbers to show (max 7 visible)
const maxVisible = 7;
const halfVisible = Math.floor(maxVisible / 2);
let startPage = Math.max(1, currentPage - halfVisible);
let endPage = Math.min(Number(length), startPage + maxVisible - 1);

if (endPage - startPage < maxVisible - 1) {
  startPage = Math.max(1, endPage - maxVisible + 1);
}

const showFirst = startPage > 1;
const showLast = endPage < Number(length);
const showFirstEllipsis = startPage > 2;
const showLastEllipsis = endPage < Number(length) - 1;
---

<nav aria-label="Blog pages" class="pagination">
  <div class="pagination__container">
    <!-- First page button -->
    {
      firstUrl == currentUrl ? (
        <span class="pagination__button pagination__button--disabled" aria-label="Go to first page">
          <svg
            class="pagination__icon"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M11 17l-5-5 5-5M18 17l-5-5 5-5" />
          </svg>
        </span>
      ) : (
        <a href={firstUrl} class="pagination__button" aria-label="Go to first page">
          <svg
            class="pagination__icon"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M11 17l-5-5 5-5M18 17l-5-5 5-5" />
          </svg>
        </a>
      )
    }

    <!-- Previous page button -->
    {
      prevUrl ? (
        <a href={prevUrl} class="pagination__button" aria-label="Go to previous page">
          <svg
            class="pagination__icon"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M15 18l-6-6 6-6" />
          </svg>
        </a>
      ) : (
        <span
          class="pagination__button pagination__button--disabled"
          aria-label="Go to previous page"
        >
          <svg
            class="pagination__icon"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M15 18l-6-6 6-6" />
          </svg>
        </span>
      )
    }

    <!-- First page number (if not in visible range) -->
    {
      showFirst && (
        <a
          href={`${firstUrl}`}
          class="pagination__button pagination__button--number"
          aria-label={`Go to page 1`}
        >
          1
        </a>
      )
    }

    <!-- First ellipsis -->
    {showFirstEllipsis && <span class="pagination__ellipsis">...</span>}

    <!-- Page numbers -->
    {
      paginationList.slice(startPage - 1, endPage).map((num) => (
        <a
          href={`${firstUrl}${num == 1 ? '' : '/' + num}`}
          class={`pagination__button pagination__button--number ${currentPage == num ? 'pagination__button--active' : ''}`}
          aria-label={`Go to page ${num}`}
          aria-current={currentPage == num ? 'page' : undefined}
        >
          {num}
        </a>
      ))
    }

    <!-- Last ellipsis -->
    {showLastEllipsis && <span class="pagination__ellipsis">...</span>}

    <!-- Last page number (if not in visible range) -->
    {
      showLast && (
        <a
          href={`${firstUrl}/${Number(length)}`}
          class="pagination__button pagination__button--number"
          aria-label={`Go to page ${Number(length)}`}
        >
          {Number(length)}
        </a>
      )
    }

    <!-- Next page button -->
    {
      nextUrl ? (
        <a href={nextUrl} class="pagination__button" aria-label="Go to next page">
          <svg
            class="pagination__icon"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M9 18l6-6-6-6" />
          </svg>
        </a>
      ) : (
        <span class="pagination__button pagination__button--disabled" aria-label="Go to next page">
          <svg
            class="pagination__icon"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M9 18l6-6-6-6" />
          </svg>
        </span>
      )
    }

    <!-- Last page button -->
    {
      lastUrl == currentUrl ? (
        <span class="pagination__button pagination__button--disabled" aria-label="Go to last page">
          <svg
            class="pagination__icon"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M13 7l5 5-5 5M6 7l5 5-5 5" />
          </svg>
        </span>
      ) : (
        <a href={lastUrl} class="pagination__button" aria-label="Go to last page">
          <svg
            class="pagination__icon"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M13 7l5 5-5 5M6 7l5 5-5 5" />
          </svg>
        </a>
      )
    }
  </div>
</nav>

<style>
  .pagination {
    display: flex;
    justify-content: center;
    margin: 2rem 0;
    font-family: var(--retro-font);
  }

  .pagination__container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(10px);
    border: 1px solid var(--grid-color);
    border-radius: 12px;
    padding: 0.75rem 1rem;
    box-shadow:
      0 4px 20px rgba(0, 255, 255, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  .pagination__button {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 2.5rem;
    height: 2.5rem;
    padding: 0.5rem;
    background: transparent;
    border: 1px solid transparent;
    border-radius: 8px;
    color: var(--text-color);
    text-decoration: none;
    font-size: 1rem;
    font-weight: 500;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }

  .pagination__button:hover:not(.pagination__button--disabled) {
    background: rgba(0, 255, 255, 0.1);
    border-color: var(--neon-blue);
    color: var(--neon-blue);
    transform: translateY(-1px);
    box-shadow:
      0 4px 12px rgba(0, 255, 255, 0.2),
      0 0 0 1px var(--neon-blue);
  }

  .pagination__button--active {
    background: linear-gradient(135deg, var(--neon-blue), var(--neon-pink));
    border-color: var(--neon-blue);
    color: var(--dark-bg);
    font-weight: 700;
    box-shadow:
      0 4px 16px rgba(0, 255, 255, 0.3),
      0 0 0 1px var(--neon-blue);
  }

  .pagination__button--active:hover {
    transform: translateY(-2px);
    box-shadow:
      0 6px 20px rgba(0, 255, 255, 0.4),
      0 0 0 1px var(--neon-blue);
  }

  .pagination__button--disabled {
    opacity: 0.4;
    cursor: not-allowed;
    color: var(--muted-color);
  }

  .pagination__button--disabled:hover {
    transform: none;
    background: transparent;
    border-color: transparent;
    box-shadow: none;
  }

  .pagination__button--number {
    font-family: var(--retro-font);
    font-size: 1.1rem;
    letter-spacing: 0.5px;
  }

  .pagination__icon {
    width: 1.25rem;
    height: 1.25rem;
    stroke-width: 2.5;
  }

  .pagination__ellipsis {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 2.5rem;
    height: 2.5rem;
    color: var(--muted-color);
    font-size: 1.2rem;
    font-weight: bold;
    letter-spacing: 2px;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .pagination__container {
      gap: 0.25rem;
      padding: 0.5rem 0.75rem;
    }

    .pagination__button {
      min-width: 2rem;
      height: 2rem;
      font-size: 0.9rem;
    }

    .pagination__icon {
      width: 1rem;
      height: 1rem;
    }

    .pagination__ellipsis {
      min-width: 2rem;
      height: 2rem;
      font-size: 1rem;
    }

    /* Hide some buttons on very small screens */
    @media (max-width: 480px) {
      .pagination__button:not(.pagination__button--number):not(.pagination__button--active) {
        display: none;
      }

      .pagination__ellipsis {
        display: none;
      }
    }
  }

  /* Focus styles for accessibility */
  .pagination__button:focus-visible {
    outline: 2px solid var(--neon-blue);
    outline-offset: 2px;
  }

  /* Animation for page transitions */
  .pagination__button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left 0.5s;
  }

  .pagination__button:hover::before {
    left: 100%;
  }
</style>
